name: Release

on:
  release:
    types: [created]
env:
  IMAGE_REPOSITORY: wuxs

jobs:
  publish-cli:
    if: startsWith(github.ref, 'refs/tags/v') == true
    runs-on: macos-12
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Set up Go 1.19
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - name: Install Helm
        run: brew install helm
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - uses: sigstore/cosign-installer@main
      - id: get_version
        run: |
          RELEASE_VERSION=$(echo $GITHUB_REF | sed -nE 's!refs/tags/!!p')
          echo "::set-output name=release_version::$RELEASE_VERSION"
      - name: Compile binaries
        run: |
          chmod +x ./hack/build-cli.sh
          ./hack/build-cli.sh
        env:
          RELEASE_VERSION: ${{ steps.get_version.outputs.release_version }}
      - name: Save release assets
        uses: actions/upload-artifact@v1
        with:
          name: release-assets
          path: release/
      - name: Attach assets to release
        uses: FabianKramm/release-asset-action@v1
        with:
          pattern: "release/*"
          github-token: ${{ secrets.GITHUB_TOKEN }}
  publish-vcluster-image:
    if: startsWith(github.ref, 'refs/tags/v') == true
    runs-on: ubuntu-22.04
    permissions:
      id-token: write   # This is the key for OIDC!
    steps:
      - uses: actions/checkout@v2
      - uses: sigstore/cosign-installer@main
      - id: get_version
        run: |
          RELEASE_VERSION=$(echo $GITHUB_REF | sed -nE 's!refs/tags/!!p')
          echo "::set-output name=release_version::$RELEASE_VERSION"
      - name: Get Docker tags
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: |
            ${{ env.IMAGE_REPOSITORY }}/vcluster
          tags: |
            type=semver,pattern={{version}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push the image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      - name: Images digests
        run: echo ${{ steps.docker_build.outputs.digest }}

  publish-vcluster-cli-image:
    if: startsWith(github.ref, 'refs/tags/v') == true
    runs-on: ubuntu-22.04
    permissions:
      id-token: write   # This is the key for OIDC!
    steps:
      - uses: actions/checkout@v2
      - uses: sigstore/cosign-installer@main
      - id: get_version
        run: |
          RELEASE_VERSION=$(echo $GITHUB_REF | sed -nE 's!refs/tags/!!p')
          echo "::set-output name=release_version::$RELEASE_VERSION"
      - name: Get Docker tags
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: |
            ${{ env.IMAGE_REPOSITORY }}/vcluster-cli
          tags: |
            type=semver,pattern={{version}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push the image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile.cli
          platforms: linux/amd64,linux/arm64,linux/arm
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      - name: Images digests
        run: echo ${{ steps.docker_build.outputs.digest }}

